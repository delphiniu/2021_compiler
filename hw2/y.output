Terminals unused in grammar

    SEMICOLON
    STRING_LIT


Grammar

    0 $accept: Program $end

    1 Program: NewScope StatementList EndScope

    2 StatementList: Statement ';' StatementList
    3              | Statement ';'

    4 Statement: DeclarationStmt
    5          | Expr
    6          | Block
    7          | IfStmt
    8          | LoopStmt
    9          | PrintStmt

   10 NewScope: %empty

   11 EndScope: %empty

   12 DeclarationStmt: Type Ident LitInit

   13 Type: TypeName

   14 TypeName: INT
   15         | FLOAT
   16         | STRING
   17         | BOOL

   18 Ident: IDENT

   19 LitInit: '=' Literal
   20        | %empty

   21 Literal: INT_LIT
   22        | FLOAT_LIT

   23 Expr: AndExpr or Expr
   24     | AndExpr

   25 or: OR

   26 AndExpr: CmprExpr and AndExpr
   27        | CmprExpr

   28 and: AND

   29 CmprExpr: CmprExpr Cmpr AddExpr
   30         | AddExpr

   31 Cmpr: '<'
   32     | '>'
   33     | SMALL_EQU
   34     | BIG_EQU
   35     | EQUAL
   36     | NOT_EQUAL

   37 AddExpr: MulExpr Add AddExpr
   38        | MulExpr

   39 Add: '+'
   40    | '-'

   41 MulExpr: UnaExpr Mul MulExpr
   42        | UnaExpr

   43 Mul: '*'
   44    | '/'
   45    | '%'

   46 UnaExpr: SignOpt Atom
   47        | Reverse Boolean

   48 SignOpt: '+' SignOpt
   49        | '-' SignOpt
   50        | %empty

   51 Reverse: '!' Reverse
   52        | %empty

   53 Atom: Ident
   54     | Ident OneArith
   55     | OneArith Ident
   56     | Literal
   57     | BracExpr Expr BracExpr
   58     | '[' Expr ']'

   59 OneArith: INC
   60         | DEC

   61 Boolean: TRUE
   62        | FALSE

   63 PrintStmt: PRINT '(' Expr LeavePrint

   64 LeavePrint: ')'

   65 BracExpr: '('
   66         | ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 51
    '%' (37) 45
    '(' (40) 63 65
    ')' (41) 64 66
    '*' (42) 43
    '+' (43) 39 48
    '-' (45) 40 49
    '/' (47) 44
    ';' (59) 2 3
    '<' (60) 31
    '=' (61) 19
    '>' (62) 32
    '[' (91) 58
    ']' (93) 58
    error (256)
    INT (258) 14
    FLOAT (259) 15
    BOOL (260) 17
    STRING (261) 16
    SEMICOLON (262)
    Block (263) 6
    IfStmt (264) 7
    LoopStmt (265) 8
    PRINT (266) 63
    INC (267) 59
    DEC (268) 60
    BIG_EQU (269) 34
    SMALL_EQU (270) 33
    EQUAL (271) 35
    NOT_EQUAL (272) 36
    AND (273) 28
    OR (274) 25
    TRUE (275) 61
    FALSE (276) 62
    INT_LIT <i_val> (277) 21
    FLOAT_LIT <f_val> (278) 22
    STRING_LIT <s_val> (279)
    IDENT <s_val> (280) 18


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    Program (41)
        on left: 1
        on right: 0
    StatementList (42)
        on left: 2 3
        on right: 1 2
    Statement (43)
        on left: 4 5 6 7 8 9
        on right: 2 3
    NewScope (44)
        on left: 10
        on right: 1
    EndScope (45)
        on left: 11
        on right: 1
    DeclarationStmt (46)
        on left: 12
        on right: 4
    Type (47)
        on left: 13
        on right: 12
    TypeName (48)
        on left: 14 15 16 17
        on right: 13
    Ident (49)
        on left: 18
        on right: 12 53 54 55
    LitInit (50)
        on left: 19 20
        on right: 12
    Literal (51)
        on left: 21 22
        on right: 19 56
    Expr (52)
        on left: 23 24
        on right: 5 23 57 58 63
    or (53)
        on left: 25
        on right: 23
    AndExpr (54)
        on left: 26 27
        on right: 23 24 26
    and (55)
        on left: 28
        on right: 26
    CmprExpr (56)
        on left: 29 30
        on right: 26 27 29
    Cmpr (57)
        on left: 31 32 33 34 35 36
        on right: 29
    AddExpr (58)
        on left: 37 38
        on right: 29 30 37
    Add (59)
        on left: 39 40
        on right: 37
    MulExpr (60)
        on left: 41 42
        on right: 37 38 41
    Mul (61)
        on left: 43 44 45
        on right: 41
    UnaExpr (62)
        on left: 46 47
        on right: 41 42
    SignOpt (63)
        on left: 48 49 50
        on right: 46 48 49
    Reverse (64)
        on left: 51 52
        on right: 47 51
    Atom (65)
        on left: 53 54 55 56 57 58
        on right: 46
    OneArith (66)
        on left: 59 60
        on right: 54 55
    Boolean (67)
        on left: 61 62
        on right: 47
    PrintStmt (68)
        on left: 63
        on right: 9
    LeavePrint (69)
        on left: 64
        on right: 63
    BracExpr (70)
        on left: 65 66
        on right: 57


State 0

    0 $accept: . Program $end

    $default  reduce using rule 10 (NewScope)

    Program   go to state 1
    NewScope  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: NewScope . StatementList EndScope

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    Block     shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '!'       shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    StatementList    go to state 15
    Statement        go to state 16
    DeclarationStmt  go to state 17
    Type             go to state 18
    TypeName         go to state 19
    Expr             go to state 20
    AndExpr          go to state 21
    CmprExpr         go to state 22
    AddExpr          go to state 23
    MulExpr          go to state 24
    UnaExpr          go to state 25
    SignOpt          go to state 26
    Reverse          go to state 27
    PrintStmt        go to state 28


State 3

    0 $accept: Program $end .

    $default  accept


State 4

   14 TypeName: INT .

    $default  reduce using rule 14 (TypeName)


State 5

   15 TypeName: FLOAT .

    $default  reduce using rule 15 (TypeName)


State 6

   17 TypeName: BOOL .

    $default  reduce using rule 17 (TypeName)


State 7

   16 TypeName: STRING .

    $default  reduce using rule 16 (TypeName)


State 8

    6 Statement: Block .

    $default  reduce using rule 6 (Statement)


State 9

    7 Statement: IfStmt .

    $default  reduce using rule 7 (Statement)


State 10

    8 Statement: LoopStmt .

    $default  reduce using rule 8 (Statement)


State 11

   63 PrintStmt: PRINT . '(' Expr LeavePrint

    '('  shift, and go to state 29


State 12

   48 SignOpt: '+' . SignOpt

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13

    $default  reduce using rule 50 (SignOpt)

    SignOpt  go to state 30


State 13

   49 SignOpt: '-' . SignOpt

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13

    $default  reduce using rule 50 (SignOpt)

    SignOpt  go to state 31


State 14

   51 Reverse: '!' . Reverse

    '!'  shift, and go to state 14

    $default  reduce using rule 52 (Reverse)

    Reverse  go to state 32


State 15

    1 Program: NewScope StatementList . EndScope

    $default  reduce using rule 11 (EndScope)

    EndScope  go to state 33


State 16

    2 StatementList: Statement . ';' StatementList
    3              | Statement . ';'

    ';'  shift, and go to state 34


State 17

    4 Statement: DeclarationStmt .

    $default  reduce using rule 4 (Statement)


State 18

   12 DeclarationStmt: Type . Ident LitInit

    IDENT  shift, and go to state 35

    Ident  go to state 36


State 19

   13 Type: TypeName .

    $default  reduce using rule 13 (Type)


State 20

    5 Statement: Expr .

    $default  reduce using rule 5 (Statement)


State 21

   23 Expr: AndExpr . or Expr
   24     | AndExpr .

    OR  shift, and go to state 37

    $default  reduce using rule 24 (Expr)

    or  go to state 38


State 22

   26 AndExpr: CmprExpr . and AndExpr
   27        | CmprExpr .
   29 CmprExpr: CmprExpr . Cmpr AddExpr

    BIG_EQU    shift, and go to state 39
    SMALL_EQU  shift, and go to state 40
    EQUAL      shift, and go to state 41
    NOT_EQUAL  shift, and go to state 42
    AND        shift, and go to state 43
    '<'        shift, and go to state 44
    '>'        shift, and go to state 45

    $default  reduce using rule 27 (AndExpr)

    and   go to state 46
    Cmpr  go to state 47


State 23

   30 CmprExpr: AddExpr .

    $default  reduce using rule 30 (CmprExpr)


State 24

   37 AddExpr: MulExpr . Add AddExpr
   38        | MulExpr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 38 (AddExpr)

    Add  go to state 50


State 25

   41 MulExpr: UnaExpr . Mul MulExpr
   42        | UnaExpr .

    '*'  shift, and go to state 51
    '/'  shift, and go to state 52
    '%'  shift, and go to state 53

    $default  reduce using rule 42 (MulExpr)

    Mul  go to state 54


State 26

   46 UnaExpr: SignOpt . Atom

    INC        shift, and go to state 55
    DEC        shift, and go to state 56
    INT_LIT    shift, and go to state 57
    FLOAT_LIT  shift, and go to state 58
    IDENT      shift, and go to state 35
    '['        shift, and go to state 59
    '('        shift, and go to state 60
    ')'        shift, and go to state 61

    Ident     go to state 62
    Literal   go to state 63
    Atom      go to state 64
    OneArith  go to state 65
    BracExpr  go to state 66


State 27

   47 UnaExpr: Reverse . Boolean

    TRUE   shift, and go to state 67
    FALSE  shift, and go to state 68

    Boolean  go to state 69


State 28

    9 Statement: PrintStmt .

    $default  reduce using rule 9 (Statement)


State 29

   63 PrintStmt: PRINT '(' . Expr LeavePrint

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    Expr      go to state 70
    AndExpr   go to state 21
    CmprExpr  go to state 22
    AddExpr   go to state 23
    MulExpr   go to state 24
    UnaExpr   go to state 25
    SignOpt   go to state 26
    Reverse   go to state 27


State 30

   48 SignOpt: '+' SignOpt .

    $default  reduce using rule 48 (SignOpt)


State 31

   49 SignOpt: '-' SignOpt .

    $default  reduce using rule 49 (SignOpt)


State 32

   51 Reverse: '!' Reverse .

    $default  reduce using rule 51 (Reverse)


State 33

    1 Program: NewScope StatementList EndScope .

    $default  reduce using rule 1 (Program)


State 34

    2 StatementList: Statement ';' . StatementList
    3              | Statement ';' .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    Block     shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    '+'       shift, and go to state 12
    '-'       shift, and go to state 13
    '!'       shift, and go to state 14

    $end      reduce using rule 3 (StatementList)
    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    StatementList    go to state 71
    Statement        go to state 16
    DeclarationStmt  go to state 17
    Type             go to state 18
    TypeName         go to state 19
    Expr             go to state 20
    AndExpr          go to state 21
    CmprExpr         go to state 22
    AddExpr          go to state 23
    MulExpr          go to state 24
    UnaExpr          go to state 25
    SignOpt          go to state 26
    Reverse          go to state 27
    PrintStmt        go to state 28


State 35

   18 Ident: IDENT .

    $default  reduce using rule 18 (Ident)


State 36

   12 DeclarationStmt: Type Ident . LitInit

    '='  shift, and go to state 72

    $default  reduce using rule 20 (LitInit)

    LitInit  go to state 73


State 37

   25 or: OR .

    $default  reduce using rule 25 (or)


State 38

   23 Expr: AndExpr or . Expr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    Expr      go to state 74
    AndExpr   go to state 21
    CmprExpr  go to state 22
    AddExpr   go to state 23
    MulExpr   go to state 24
    UnaExpr   go to state 25
    SignOpt   go to state 26
    Reverse   go to state 27


State 39

   34 Cmpr: BIG_EQU .

    $default  reduce using rule 34 (Cmpr)


State 40

   33 Cmpr: SMALL_EQU .

    $default  reduce using rule 33 (Cmpr)


State 41

   35 Cmpr: EQUAL .

    $default  reduce using rule 35 (Cmpr)


State 42

   36 Cmpr: NOT_EQUAL .

    $default  reduce using rule 36 (Cmpr)


State 43

   28 and: AND .

    $default  reduce using rule 28 (and)


State 44

   31 Cmpr: '<' .

    $default  reduce using rule 31 (Cmpr)


State 45

   32 Cmpr: '>' .

    $default  reduce using rule 32 (Cmpr)


State 46

   26 AndExpr: CmprExpr and . AndExpr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    AndExpr   go to state 75
    CmprExpr  go to state 22
    AddExpr   go to state 23
    MulExpr   go to state 24
    UnaExpr   go to state 25
    SignOpt   go to state 26
    Reverse   go to state 27


State 47

   29 CmprExpr: CmprExpr Cmpr . AddExpr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    AddExpr  go to state 76
    MulExpr  go to state 24
    UnaExpr  go to state 25
    SignOpt  go to state 26
    Reverse  go to state 27


State 48

   39 Add: '+' .

    $default  reduce using rule 39 (Add)


State 49

   40 Add: '-' .

    $default  reduce using rule 40 (Add)


State 50

   37 AddExpr: MulExpr Add . AddExpr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    AddExpr  go to state 77
    MulExpr  go to state 24
    UnaExpr  go to state 25
    SignOpt  go to state 26
    Reverse  go to state 27


State 51

   43 Mul: '*' .

    $default  reduce using rule 43 (Mul)


State 52

   44 Mul: '/' .

    $default  reduce using rule 44 (Mul)


State 53

   45 Mul: '%' .

    $default  reduce using rule 45 (Mul)


State 54

   41 MulExpr: UnaExpr Mul . MulExpr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    MulExpr  go to state 78
    UnaExpr  go to state 25
    SignOpt  go to state 26
    Reverse  go to state 27


State 55

   59 OneArith: INC .

    $default  reduce using rule 59 (OneArith)


State 56

   60 OneArith: DEC .

    $default  reduce using rule 60 (OneArith)


State 57

   21 Literal: INT_LIT .

    $default  reduce using rule 21 (Literal)


State 58

   22 Literal: FLOAT_LIT .

    $default  reduce using rule 22 (Literal)


State 59

   58 Atom: '[' . Expr ']'

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    Expr      go to state 79
    AndExpr   go to state 21
    CmprExpr  go to state 22
    AddExpr   go to state 23
    MulExpr   go to state 24
    UnaExpr   go to state 25
    SignOpt   go to state 26
    Reverse   go to state 27


State 60

   65 BracExpr: '(' .

    $default  reduce using rule 65 (BracExpr)


State 61

   66 BracExpr: ')' .

    $default  reduce using rule 66 (BracExpr)


State 62

   53 Atom: Ident .
   54     | Ident . OneArith

    INC  shift, and go to state 55
    DEC  shift, and go to state 56

    $default  reduce using rule 53 (Atom)

    OneArith  go to state 80


State 63

   56 Atom: Literal .

    $default  reduce using rule 56 (Atom)


State 64

   46 UnaExpr: SignOpt Atom .

    $default  reduce using rule 46 (UnaExpr)


State 65

   55 Atom: OneArith . Ident

    IDENT  shift, and go to state 35

    Ident  go to state 81


State 66

   57 Atom: BracExpr . Expr BracExpr

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '!'  shift, and go to state 14

    TRUE      reduce using rule 52 (Reverse)
    FALSE     reduce using rule 52 (Reverse)
    $default  reduce using rule 50 (SignOpt)

    Expr      go to state 82
    AndExpr   go to state 21
    CmprExpr  go to state 22
    AddExpr   go to state 23
    MulExpr   go to state 24
    UnaExpr   go to state 25
    SignOpt   go to state 26
    Reverse   go to state 27


State 67

   61 Boolean: TRUE .

    $default  reduce using rule 61 (Boolean)


State 68

   62 Boolean: FALSE .

    $default  reduce using rule 62 (Boolean)


State 69

   47 UnaExpr: Reverse Boolean .

    $default  reduce using rule 47 (UnaExpr)


State 70

   63 PrintStmt: PRINT '(' Expr . LeavePrint

    ')'  shift, and go to state 83

    LeavePrint  go to state 84


State 71

    2 StatementList: Statement ';' StatementList .

    $default  reduce using rule 2 (StatementList)


State 72

   19 LitInit: '=' . Literal

    INT_LIT    shift, and go to state 57
    FLOAT_LIT  shift, and go to state 58

    Literal  go to state 85


State 73

   12 DeclarationStmt: Type Ident LitInit .

    $default  reduce using rule 12 (DeclarationStmt)


State 74

   23 Expr: AndExpr or Expr .

    $default  reduce using rule 23 (Expr)


State 75

   26 AndExpr: CmprExpr and AndExpr .

    $default  reduce using rule 26 (AndExpr)


State 76

   29 CmprExpr: CmprExpr Cmpr AddExpr .

    $default  reduce using rule 29 (CmprExpr)


State 77

   37 AddExpr: MulExpr Add AddExpr .

    $default  reduce using rule 37 (AddExpr)


State 78

   41 MulExpr: UnaExpr Mul MulExpr .

    $default  reduce using rule 41 (MulExpr)


State 79

   58 Atom: '[' Expr . ']'

    ']'  shift, and go to state 86


State 80

   54 Atom: Ident OneArith .

    $default  reduce using rule 54 (Atom)


State 81

   55 Atom: OneArith Ident .

    $default  reduce using rule 55 (Atom)


State 82

   57 Atom: BracExpr Expr . BracExpr

    '('  shift, and go to state 60
    ')'  shift, and go to state 61

    BracExpr  go to state 87


State 83

   64 LeavePrint: ')' .

    $default  reduce using rule 64 (LeavePrint)


State 84

   63 PrintStmt: PRINT '(' Expr LeavePrint .

    $default  reduce using rule 63 (PrintStmt)


State 85

   19 LitInit: '=' Literal .

    $default  reduce using rule 19 (LitInit)


State 86

   58 Atom: '[' Expr ']' .

    $default  reduce using rule 58 (Atom)


State 87

   57 Atom: BracExpr Expr BracExpr .

    $default  reduce using rule 57 (Atom)
