Terminals unused in grammar

    SEMICOLON
    IF
    ELSE
    FOR


Grammar

    0 $accept: Program $end

    1 Program: NewScope StatementList

    2 StatementList: Statement ';' StatementList
    3              | Statement ';'
    4              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope

    6 NewScope: '{'
    7         | %empty

    8 EndScope: '}'

    9 Statement: DeclarationStmt
   10          | Expr LeaveExpr
   11          | IfStmt
   12          | LoopStmt
   13          | PrintStmt

   14 DeclarationStmt: Type Ident LitInit

   15 Type: TypeName

   16 TypeName: INT
   17         | FLOAT
   18         | STRING
   19         | BOOL

   20 Ident: IDENT

   21 LitInit: '=' Literal
   22        | '=' Boolean
   23        | %empty

   24 Literal: INT_LIT
   25        | FLOAT_LIT
   26        | '"' str '"'

   27 str: STRING_LIT

   28 Expr: AndExpr or Expr
   29     | AndExpr

   30 LeaveExpr: %empty

   31 or: OR

   32 AndExpr: CmprExpr and AndExpr
   33        | CmprExpr

   34 and: AND

   35 CmprExpr: CmprExpr Cmpr AddExpr
   36         | AddExpr

   37 Cmpr: '<'
   38     | '>'
   39     | SMALL_EQU
   40     | BIG_EQU
   41     | EQUAL
   42     | NOT_EQUAL

   43 AddExpr: MulExpr Add AddExpr
   44        | MulExpr

   45 Add: '+'
   46    | '-'

   47 MulExpr: UnaExpr Mul MulExpr
   48        | UnaExpr

   49 Mul: '*'
   50    | '/'
   51    | '%'

   52 UnaExpr: SignOpt Atom
   53        | Reverse Boolean

   54 SignOpt: '+' SignOpt
   55        | '-' SignOpt
   56        | %empty

   57 Reverse: '!' Reverse
   58        | %empty

   59 Atom: Ident
   60     | Ident OneArith
   61     | OneArith Ident
   62     | Literal
   63     | BracExpr Expr BracExpr
   64     | '[' Expr ']'

   65 OneArith: INC
   66         | DEC

   67 Boolean: TRUE
   68        | FALSE

   69 PrintStmt: PRINT '(' Expr LeavePrint

   70 LeavePrint: ')'

   71 BracExpr: '('
   72         | ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 57
    '"' (34) 26
    '%' (37) 51
    '(' (40) 4 5 69 71
    ')' (41) 4 5 70 72
    '*' (42) 49
    '+' (43) 45 54
    '-' (45) 46 55
    '/' (47) 50
    ';' (59) 2 3
    '<' (60) 37
    '=' (61) 21 22
    '>' (62) 38
    '[' (91) 64
    ']' (93) 64
    '{' (123) 6
    '}' (125) 8
    error (256)
    INT (258) 16
    FLOAT (259) 17
    BOOL (260) 19
    STRING (261) 18
    SEMICOLON (262)
    IfStmt (263) 11
    LoopStmt (264) 12
    PRINT (265) 69
    INC (266) 65
    DEC (267) 66
    BIG_EQU (268) 40
    SMALL_EQU (269) 39
    EQUAL (270) 41
    NOT_EQUAL (271) 42
    AND (272) 34
    OR (273) 31
    TRUE (274) 67
    FALSE (275) 68
    IF (276)
    ELSE (277)
    WHILE (278) 4 5
    FOR (279)
    INT_LIT <i_val> (280) 24
    FLOAT_LIT <f_val> (281) 25
    STRING_LIT <s_val> (282) 27
    IDENT <s_val> (283) 20


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    StatementList (48)
        on left: 2 3 4 5
        on right: 1 2 4 5
    NewScope (49)
        on left: 6 7
        on right: 1 4 5
    EndScope (50)
        on left: 8
        on right: 4 5
    Statement (51)
        on left: 9 10 11 12 13
        on right: 2 3
    DeclarationStmt (52)
        on left: 14
        on right: 9
    Type (53)
        on left: 15
        on right: 14
    TypeName (54)
        on left: 16 17 18 19
        on right: 15
    Ident (55)
        on left: 20
        on right: 14 59 60 61
    LitInit (56)
        on left: 21 22 23
        on right: 14
    Literal (57)
        on left: 24 25 26
        on right: 21 62
    str (58)
        on left: 27
        on right: 26
    Expr (59)
        on left: 28 29
        on right: 4 5 10 28 63 64 69
    LeaveExpr (60)
        on left: 30
        on right: 4 5 10
    or (61)
        on left: 31
        on right: 28
    AndExpr (62)
        on left: 32 33
        on right: 28 29 32
    and (63)
        on left: 34
        on right: 32
    CmprExpr (64)
        on left: 35 36
        on right: 32 33 35
    Cmpr (65)
        on left: 37 38 39 40 41 42
        on right: 35
    AddExpr (66)
        on left: 43 44
        on right: 35 36 43
    Add (67)
        on left: 45 46
        on right: 43
    MulExpr (68)
        on left: 47 48
        on right: 43 44 47
    Mul (69)
        on left: 49 50 51
        on right: 47
    UnaExpr (70)
        on left: 52 53
        on right: 47 48
    SignOpt (71)
        on left: 54 55 56
        on right: 52 54 55
    Reverse (72)
        on left: 57 58
        on right: 53 57
    Atom (73)
        on left: 59 60 61 62 63 64
        on right: 52
    OneArith (74)
        on left: 65 66
        on right: 60 61
    Boolean (75)
        on left: 67 68
        on right: 22 53
    PrintStmt (76)
        on left: 69
        on right: 13
    LeavePrint (77)
        on left: 70
        on right: 69
    BracExpr (78)
        on left: 71 72
        on right: 63


State 0

    0 $accept: . Program $end

    '{'  shift, and go to state 1

    $default  reduce using rule 7 (NewScope)

    Program   go to state 2
    NewScope  go to state 3


State 1

    6 NewScope: '{' .

    $default  reduce using rule 6 (NewScope)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: NewScope . StatementList

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    StatementList    go to state 16
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 4

    0 $accept: Program $end .

    $default  accept


State 5

   16 TypeName: INT .

    $default  reduce using rule 16 (TypeName)


State 6

   17 TypeName: FLOAT .

    $default  reduce using rule 17 (TypeName)


State 7

   19 TypeName: BOOL .

    $default  reduce using rule 19 (TypeName)


State 8

   18 TypeName: STRING .

    $default  reduce using rule 18 (TypeName)


State 9

   11 Statement: IfStmt .

    $default  reduce using rule 11 (Statement)


State 10

   12 Statement: LoopStmt .

    $default  reduce using rule 12 (Statement)


State 11

   69 PrintStmt: PRINT . '(' Expr LeavePrint

    '('  shift, and go to state 30


State 12

    4 StatementList: WHILE . '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE . '(' Expr LeaveExpr ')' NewScope StatementList EndScope

    '('  shift, and go to state 31


State 13

   54 SignOpt: '+' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 56 (SignOpt)

    SignOpt  go to state 32


State 14

   55 SignOpt: '-' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 56 (SignOpt)

    SignOpt  go to state 33


State 15

   57 Reverse: '!' . Reverse

    '!'  shift, and go to state 15

    $default  reduce using rule 58 (Reverse)

    Reverse  go to state 34


State 16

    1 Program: NewScope StatementList .

    $default  reduce using rule 1 (Program)


State 17

    2 StatementList: Statement . ';' StatementList
    3              | Statement . ';'

    ';'  shift, and go to state 35


State 18

    9 Statement: DeclarationStmt .

    $default  reduce using rule 9 (Statement)


State 19

   14 DeclarationStmt: Type . Ident LitInit

    IDENT  shift, and go to state 36

    Ident  go to state 37


State 20

   15 Type: TypeName .

    $default  reduce using rule 15 (Type)


State 21

   10 Statement: Expr . LeaveExpr

    $default  reduce using rule 30 (LeaveExpr)

    LeaveExpr  go to state 38


State 22

   28 Expr: AndExpr . or Expr
   29     | AndExpr .

    OR  shift, and go to state 39

    $default  reduce using rule 29 (Expr)

    or  go to state 40


State 23

   32 AndExpr: CmprExpr . and AndExpr
   33        | CmprExpr .
   35 CmprExpr: CmprExpr . Cmpr AddExpr

    BIG_EQU    shift, and go to state 41
    SMALL_EQU  shift, and go to state 42
    EQUAL      shift, and go to state 43
    NOT_EQUAL  shift, and go to state 44
    AND        shift, and go to state 45
    '<'        shift, and go to state 46
    '>'        shift, and go to state 47

    $default  reduce using rule 33 (AndExpr)

    and   go to state 48
    Cmpr  go to state 49


State 24

   36 CmprExpr: AddExpr .

    $default  reduce using rule 36 (CmprExpr)


State 25

   43 AddExpr: MulExpr . Add AddExpr
   44        | MulExpr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51

    $default  reduce using rule 44 (AddExpr)

    Add  go to state 52


State 26

   47 MulExpr: UnaExpr . Mul MulExpr
   48        | UnaExpr .

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 48 (MulExpr)

    Mul  go to state 56


State 27

   52 UnaExpr: SignOpt . Atom

    INC        shift, and go to state 57
    DEC        shift, and go to state 58
    INT_LIT    shift, and go to state 59
    FLOAT_LIT  shift, and go to state 60
    IDENT      shift, and go to state 36
    '('        shift, and go to state 61
    ')'        shift, and go to state 62
    '"'        shift, and go to state 63
    '['        shift, and go to state 64

    Ident     go to state 65
    Literal   go to state 66
    Atom      go to state 67
    OneArith  go to state 68
    BracExpr  go to state 69


State 28

   53 UnaExpr: Reverse . Boolean

    TRUE   shift, and go to state 70
    FALSE  shift, and go to state 71

    Boolean  go to state 72


State 29

   13 Statement: PrintStmt .

    $default  reduce using rule 13 (Statement)


State 30

   69 PrintStmt: PRINT '(' . Expr LeavePrint

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    Expr      go to state 73
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 31

    4 StatementList: WHILE '(' . Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' . Expr LeaveExpr ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    Expr      go to state 74
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 32

   54 SignOpt: '+' SignOpt .

    $default  reduce using rule 54 (SignOpt)


State 33

   55 SignOpt: '-' SignOpt .

    $default  reduce using rule 55 (SignOpt)


State 34

   57 Reverse: '!' Reverse .

    $default  reduce using rule 57 (Reverse)


State 35

    2 StatementList: Statement ';' . StatementList
    3              | Statement ';' .

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 3 (StatementList)
    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    '}'       reduce using rule 3 (StatementList)
    $default  reduce using rule 56 (SignOpt)

    StatementList    go to state 75
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 36

   20 Ident: IDENT .

    $default  reduce using rule 20 (Ident)


State 37

   14 DeclarationStmt: Type Ident . LitInit

    '='  shift, and go to state 76

    $default  reduce using rule 23 (LitInit)

    LitInit  go to state 77


State 38

   10 Statement: Expr LeaveExpr .

    $default  reduce using rule 10 (Statement)


State 39

   31 or: OR .

    $default  reduce using rule 31 (or)


State 40

   28 Expr: AndExpr or . Expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    Expr      go to state 78
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 41

   40 Cmpr: BIG_EQU .

    $default  reduce using rule 40 (Cmpr)


State 42

   39 Cmpr: SMALL_EQU .

    $default  reduce using rule 39 (Cmpr)


State 43

   41 Cmpr: EQUAL .

    $default  reduce using rule 41 (Cmpr)


State 44

   42 Cmpr: NOT_EQUAL .

    $default  reduce using rule 42 (Cmpr)


State 45

   34 and: AND .

    $default  reduce using rule 34 (and)


State 46

   37 Cmpr: '<' .

    $default  reduce using rule 37 (Cmpr)


State 47

   38 Cmpr: '>' .

    $default  reduce using rule 38 (Cmpr)


State 48

   32 AndExpr: CmprExpr and . AndExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    AndExpr   go to state 79
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 49

   35 CmprExpr: CmprExpr Cmpr . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    AddExpr  go to state 80
    MulExpr  go to state 25
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 50

   45 Add: '+' .

    $default  reduce using rule 45 (Add)


State 51

   46 Add: '-' .

    $default  reduce using rule 46 (Add)


State 52

   43 AddExpr: MulExpr Add . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    AddExpr  go to state 81
    MulExpr  go to state 25
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 53

   49 Mul: '*' .

    $default  reduce using rule 49 (Mul)


State 54

   50 Mul: '/' .

    $default  reduce using rule 50 (Mul)


State 55

   51 Mul: '%' .

    $default  reduce using rule 51 (Mul)


State 56

   47 MulExpr: UnaExpr Mul . MulExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    MulExpr  go to state 82
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 57

   65 OneArith: INC .

    $default  reduce using rule 65 (OneArith)


State 58

   66 OneArith: DEC .

    $default  reduce using rule 66 (OneArith)


State 59

   24 Literal: INT_LIT .

    $default  reduce using rule 24 (Literal)


State 60

   25 Literal: FLOAT_LIT .

    $default  reduce using rule 25 (Literal)


State 61

   71 BracExpr: '(' .

    $default  reduce using rule 71 (BracExpr)


State 62

   72 BracExpr: ')' .

    $default  reduce using rule 72 (BracExpr)


State 63

   26 Literal: '"' . str '"'

    STRING_LIT  shift, and go to state 83

    str  go to state 84


State 64

   64 Atom: '[' . Expr ']'

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    Expr      go to state 85
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 65

   59 Atom: Ident .
   60     | Ident . OneArith

    INC  shift, and go to state 57
    DEC  shift, and go to state 58

    $default  reduce using rule 59 (Atom)

    OneArith  go to state 86


State 66

   62 Atom: Literal .

    $default  reduce using rule 62 (Atom)


State 67

   52 UnaExpr: SignOpt Atom .

    $default  reduce using rule 52 (UnaExpr)


State 68

   61 Atom: OneArith . Ident

    IDENT  shift, and go to state 36

    Ident  go to state 87


State 69

   63 Atom: BracExpr . Expr BracExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    Expr      go to state 88
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 70

   67 Boolean: TRUE .

    $default  reduce using rule 67 (Boolean)


State 71

   68 Boolean: FALSE .

    $default  reduce using rule 68 (Boolean)


State 72

   53 UnaExpr: Reverse Boolean .

    $default  reduce using rule 53 (UnaExpr)


State 73

   69 PrintStmt: PRINT '(' Expr . LeavePrint

    ')'  shift, and go to state 89

    LeavePrint  go to state 90


State 74

    4 StatementList: WHILE '(' Expr . LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr . LeaveExpr ')' NewScope StatementList EndScope

    $default  reduce using rule 30 (LeaveExpr)

    LeaveExpr  go to state 91


State 75

    2 StatementList: Statement ';' StatementList .

    $default  reduce using rule 2 (StatementList)


State 76

   21 LitInit: '=' . Literal
   22        | '=' . Boolean

    TRUE       shift, and go to state 70
    FALSE      shift, and go to state 71
    INT_LIT    shift, and go to state 59
    FLOAT_LIT  shift, and go to state 60
    '"'        shift, and go to state 63

    Literal  go to state 92
    Boolean  go to state 93


State 77

   14 DeclarationStmt: Type Ident LitInit .

    $default  reduce using rule 14 (DeclarationStmt)


State 78

   28 Expr: AndExpr or Expr .

    $default  reduce using rule 28 (Expr)


State 79

   32 AndExpr: CmprExpr and AndExpr .

    $default  reduce using rule 32 (AndExpr)


State 80

   35 CmprExpr: CmprExpr Cmpr AddExpr .

    $default  reduce using rule 35 (CmprExpr)


State 81

   43 AddExpr: MulExpr Add AddExpr .

    $default  reduce using rule 43 (AddExpr)


State 82

   47 MulExpr: UnaExpr Mul MulExpr .

    $default  reduce using rule 47 (MulExpr)


State 83

   27 str: STRING_LIT .

    $default  reduce using rule 27 (str)


State 84

   26 Literal: '"' str . '"'

    '"'  shift, and go to state 94


State 85

   64 Atom: '[' Expr . ']'

    ']'  shift, and go to state 95


State 86

   60 Atom: Ident OneArith .

    $default  reduce using rule 60 (Atom)


State 87

   61 Atom: OneArith Ident .

    $default  reduce using rule 61 (Atom)


State 88

   63 Atom: BracExpr Expr . BracExpr

    '('  shift, and go to state 61
    ')'  shift, and go to state 62

    BracExpr  go to state 96


State 89

   70 LeavePrint: ')' .

    $default  reduce using rule 70 (LeavePrint)


State 90

   69 PrintStmt: PRINT '(' Expr LeavePrint .

    $default  reduce using rule 69 (PrintStmt)


State 91

    4 StatementList: WHILE '(' Expr LeaveExpr . ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr . ')' NewScope StatementList EndScope

    ')'  shift, and go to state 97


State 92

   21 LitInit: '=' Literal .

    $default  reduce using rule 21 (LitInit)


State 93

   22 LitInit: '=' Boolean .

    $default  reduce using rule 22 (LitInit)


State 94

   26 Literal: '"' str '"' .

    $default  reduce using rule 26 (Literal)


State 95

   64 Atom: '[' Expr ']' .

    $default  reduce using rule 64 (Atom)


State 96

   63 Atom: BracExpr Expr BracExpr .

    $default  reduce using rule 63 (Atom)


State 97

    4 StatementList: WHILE '(' Expr LeaveExpr ')' . NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' . NewScope StatementList EndScope

    '{'  shift, and go to state 1

    $default  reduce using rule 7 (NewScope)

    NewScope  go to state 98


State 98

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope . StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope . StatementList EndScope

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    $default  reduce using rule 56 (SignOpt)

    StatementList    go to state 99
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 99

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList . EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList . EndScope

    '}'  shift, and go to state 100

    EndScope  go to state 101


State 100

    8 EndScope: '}' .

    $default  reduce using rule 8 (EndScope)


State 101

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope . StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope .

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 5 (StatementList)
    TRUE      reduce using rule 58 (Reverse)
    FALSE     reduce using rule 58 (Reverse)
    '}'       reduce using rule 5 (StatementList)
    $default  reduce using rule 56 (SignOpt)

    StatementList    go to state 102
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 102

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList .

    $default  reduce using rule 4 (StatementList)
