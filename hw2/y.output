Terminals unused in grammar

    SEMICOLON
    IF
    ELSE
    FOR


Grammar

    0 $accept: Program $end

    1 Program: NewScope StatementList

    2 StatementList: Statement ';' StatementList
    3              | Statement ';'
    4              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope

    6 NewScope: '{'
    7         | %empty

    8 EndScope: '}'

    9 Statement: DeclarationStmt
   10          | Expr LeaveExpr Assign
   11          | IfStmt
   12          | LoopStmt
   13          | PrintStmt

   14 DeclarationStmt: Type Ident LitInit
   15                | Type Ident IndHead Expr IndEnd

   16 Type: TypeName

   17 TypeName: INT
   18         | FLOAT
   19         | STRING
   20         | BOOL

   21 Ident: IDENT

   22 LitInit: '=' Literal
   23        | '=' Boolean
   24        | %empty

   25 Literal: INT_LIT
   26        | FLOAT_LIT
   27        | '"' str '"'

   28 str: STRING_LIT

   29 Expr: AndExpr or Expr
   30     | AndExpr

   31 LeaveExpr: %empty

   32 or: OR

   33 Assign: '=' Expr LeaveExpr
   34       | ADD_ASSIGN Expr LeaveExpr
   35       | SUB_ASSIGN Expr LeaveExpr
   36       | MUL_ASSIGN Expr LeaveExpr
   37       | QUO_ASSIGN Expr LeaveExpr
   38       | REM_ASSIGN Expr LeaveExpr
   39       | %empty

   40 AndExpr: CmprExpr and AndExpr
   41        | CmprExpr

   42 and: AND

   43 CmprExpr: CmprExpr Cmpr AddExpr
   44         | AddExpr

   45 Cmpr: '<'
   46     | '>'
   47     | SMALL_EQU
   48     | BIG_EQU
   49     | EQUAL
   50     | NOT_EQUAL

   51 AddExpr: MulExpr Add AddExpr
   52        | MulExpr

   53 Add: '+'
   54    | '-'

   55 MulExpr: UnaExpr Mul MulExpr
   56        | UnaExpr

   57 Mul: '*'
   58    | '/'
   59    | '%'

   60 UnaExpr: SignOpt Atom
   61        | Reverse Boolean

   62 SignOpt: '+' SignOpt
   63        | '-' SignOpt
   64        | %empty

   65 Reverse: '!' Reverse
   66        | %empty

   67 Atom: Ident
   68     | Ident OneArith
   69     | OneArith Ident
   70     | Literal
   71     | BracHead Expr BracEnd
   72     | Ident IndHead Expr IndEnd
   73     | EnterCast TypeName ')' Ident
   74     | EnterCast TypeName ')' Literal

   75 EnterCast: '('

   76 OneArith: INC
   77         | DEC

   78 Boolean: TRUE
   79        | FALSE

   80 PrintStmt: PRINT '(' Expr LeavePrint

   81 LeavePrint: ')'

   82 IndHead: '['

   83 IndEnd: ']'

   84 BracHead: '('

   85 BracEnd: ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 65
    '"' (34) 27
    '%' (37) 59
    '(' (40) 4 5 75 80 84
    ')' (41) 4 5 73 74 81 85
    '*' (42) 57
    '+' (43) 53 62
    '-' (45) 54 63
    '/' (47) 58
    ';' (59) 2 3
    '<' (60) 45
    '=' (61) 22 23 33
    '>' (62) 46
    '[' (91) 82
    ']' (93) 83
    '{' (123) 6
    '}' (125) 8
    error (256)
    INT (258) 17
    FLOAT (259) 18
    BOOL (260) 20
    STRING (261) 19
    SEMICOLON (262)
    IfStmt (263) 11
    LoopStmt (264) 12
    PRINT (265) 80
    INC (266) 76
    DEC (267) 77
    BIG_EQU (268) 48
    SMALL_EQU (269) 47
    EQUAL (270) 49
    NOT_EQUAL (271) 50
    AND (272) 42
    OR (273) 32
    TRUE (274) 78
    FALSE (275) 79
    IF (276)
    ELSE (277)
    WHILE (278) 4 5
    FOR (279)
    ADD_ASSIGN (280) 34
    SUB_ASSIGN (281) 35
    MUL_ASSIGN (282) 36
    QUO_ASSIGN (283) 37
    REM_ASSIGN (284) 38
    INT_LIT <i_val> (285) 25
    FLOAT_LIT <f_val> (286) 26
    STRING_LIT <s_val> (287) 28
    IDENT <s_val> (288) 21


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program (52)
        on left: 1
        on right: 0
    StatementList (53)
        on left: 2 3 4 5
        on right: 1 2 4 5
    NewScope (54)
        on left: 6 7
        on right: 1 4 5
    EndScope (55)
        on left: 8
        on right: 4 5
    Statement (56)
        on left: 9 10 11 12 13
        on right: 2 3
    DeclarationStmt (57)
        on left: 14 15
        on right: 9
    Type (58)
        on left: 16
        on right: 14 15
    TypeName (59)
        on left: 17 18 19 20
        on right: 16 73 74
    Ident (60)
        on left: 21
        on right: 14 15 67 68 69 72 73
    LitInit (61)
        on left: 22 23 24
        on right: 14
    Literal (62)
        on left: 25 26 27
        on right: 22 70 74
    str (63)
        on left: 28
        on right: 27
    Expr (64)
        on left: 29 30
        on right: 4 5 10 15 29 33 34 35 36 37 38 71 72 80
    LeaveExpr (65)
        on left: 31
        on right: 4 5 10 33 34 35 36 37 38
    or (66)
        on left: 32
        on right: 29
    Assign (67)
        on left: 33 34 35 36 37 38 39
        on right: 10
    AndExpr (68)
        on left: 40 41
        on right: 29 30 40
    and (69)
        on left: 42
        on right: 40
    CmprExpr (70)
        on left: 43 44
        on right: 40 41 43
    Cmpr (71)
        on left: 45 46 47 48 49 50
        on right: 43
    AddExpr (72)
        on left: 51 52
        on right: 43 44 51
    Add (73)
        on left: 53 54
        on right: 51
    MulExpr (74)
        on left: 55 56
        on right: 51 52 55
    Mul (75)
        on left: 57 58 59
        on right: 55
    UnaExpr (76)
        on left: 60 61
        on right: 55 56
    SignOpt (77)
        on left: 62 63 64
        on right: 60 62 63
    Reverse (78)
        on left: 65 66
        on right: 61 65
    Atom (79)
        on left: 67 68 69 70 71 72 73 74
        on right: 60
    EnterCast (80)
        on left: 75
        on right: 73 74
    OneArith (81)
        on left: 76 77
        on right: 68 69
    Boolean (82)
        on left: 78 79
        on right: 23 61
    PrintStmt (83)
        on left: 80
        on right: 13
    LeavePrint (84)
        on left: 81
        on right: 80
    IndHead (85)
        on left: 82
        on right: 15 72
    IndEnd (86)
        on left: 83
        on right: 15 72
    BracHead (87)
        on left: 84
        on right: 71
    BracEnd (88)
        on left: 85
        on right: 71


State 0

    0 $accept: . Program $end

    '{'  shift, and go to state 1

    $default  reduce using rule 7 (NewScope)

    Program   go to state 2
    NewScope  go to state 3


State 1

    6 NewScope: '{' .

    $default  reduce using rule 6 (NewScope)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: NewScope . StatementList

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    StatementList    go to state 16
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 4

    0 $accept: Program $end .

    $default  accept


State 5

   17 TypeName: INT .

    $default  reduce using rule 17 (TypeName)


State 6

   18 TypeName: FLOAT .

    $default  reduce using rule 18 (TypeName)


State 7

   20 TypeName: BOOL .

    $default  reduce using rule 20 (TypeName)


State 8

   19 TypeName: STRING .

    $default  reduce using rule 19 (TypeName)


State 9

   11 Statement: IfStmt .

    $default  reduce using rule 11 (Statement)


State 10

   12 Statement: LoopStmt .

    $default  reduce using rule 12 (Statement)


State 11

   80 PrintStmt: PRINT . '(' Expr LeavePrint

    '('  shift, and go to state 30


State 12

    4 StatementList: WHILE . '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE . '(' Expr LeaveExpr ')' NewScope StatementList EndScope

    '('  shift, and go to state 31


State 13

   62 SignOpt: '+' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 64 (SignOpt)

    SignOpt  go to state 32


State 14

   63 SignOpt: '-' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 64 (SignOpt)

    SignOpt  go to state 33


State 15

   65 Reverse: '!' . Reverse

    '!'  shift, and go to state 15

    $default  reduce using rule 66 (Reverse)

    Reverse  go to state 34


State 16

    1 Program: NewScope StatementList .

    $default  reduce using rule 1 (Program)


State 17

    2 StatementList: Statement . ';' StatementList
    3              | Statement . ';'

    ';'  shift, and go to state 35


State 18

    9 Statement: DeclarationStmt .

    $default  reduce using rule 9 (Statement)


State 19

   14 DeclarationStmt: Type . Ident LitInit
   15                | Type . Ident IndHead Expr IndEnd

    IDENT  shift, and go to state 36

    Ident  go to state 37


State 20

   16 Type: TypeName .

    $default  reduce using rule 16 (Type)


State 21

   10 Statement: Expr . LeaveExpr Assign

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 38


State 22

   29 Expr: AndExpr . or Expr
   30     | AndExpr .

    OR  shift, and go to state 39

    $default  reduce using rule 30 (Expr)

    or  go to state 40


State 23

   40 AndExpr: CmprExpr . and AndExpr
   41        | CmprExpr .
   43 CmprExpr: CmprExpr . Cmpr AddExpr

    BIG_EQU    shift, and go to state 41
    SMALL_EQU  shift, and go to state 42
    EQUAL      shift, and go to state 43
    NOT_EQUAL  shift, and go to state 44
    AND        shift, and go to state 45
    '<'        shift, and go to state 46
    '>'        shift, and go to state 47

    $default  reduce using rule 41 (AndExpr)

    and   go to state 48
    Cmpr  go to state 49


State 24

   44 CmprExpr: AddExpr .

    $default  reduce using rule 44 (CmprExpr)


State 25

   51 AddExpr: MulExpr . Add AddExpr
   52        | MulExpr .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51

    $default  reduce using rule 52 (AddExpr)

    Add  go to state 52


State 26

   55 MulExpr: UnaExpr . Mul MulExpr
   56        | UnaExpr .

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 56 (MulExpr)

    Mul  go to state 56


State 27

   60 UnaExpr: SignOpt . Atom

    INC        shift, and go to state 57
    DEC        shift, and go to state 58
    INT_LIT    shift, and go to state 59
    FLOAT_LIT  shift, and go to state 60
    IDENT      shift, and go to state 36
    '('        shift, and go to state 61
    '"'        shift, and go to state 62

    Ident      go to state 63
    Literal    go to state 64
    Atom       go to state 65
    EnterCast  go to state 66
    OneArith   go to state 67
    BracHead   go to state 68


State 28

   61 UnaExpr: Reverse . Boolean

    TRUE   shift, and go to state 69
    FALSE  shift, and go to state 70

    Boolean  go to state 71


State 29

   13 Statement: PrintStmt .

    $default  reduce using rule 13 (Statement)


State 30

   80 PrintStmt: PRINT '(' . Expr LeavePrint

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 72
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 31

    4 StatementList: WHILE '(' . Expr LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' . Expr LeaveExpr ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 73
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 32

   62 SignOpt: '+' SignOpt .

    $default  reduce using rule 62 (SignOpt)


State 33

   63 SignOpt: '-' SignOpt .

    $default  reduce using rule 63 (SignOpt)


State 34

   65 Reverse: '!' Reverse .

    $default  reduce using rule 65 (Reverse)


State 35

    2 StatementList: Statement ';' . StatementList
    3              | Statement ';' .

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 3 (StatementList)
    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    '}'       reduce using rule 3 (StatementList)
    $default  reduce using rule 64 (SignOpt)

    StatementList    go to state 74
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 36

   21 Ident: IDENT .

    $default  reduce using rule 21 (Ident)


State 37

   14 DeclarationStmt: Type Ident . LitInit
   15                | Type Ident . IndHead Expr IndEnd

    '='  shift, and go to state 75
    '['  shift, and go to state 76

    $default  reduce using rule 24 (LitInit)

    LitInit  go to state 77
    IndHead  go to state 78


State 38

   10 Statement: Expr LeaveExpr . Assign

    ADD_ASSIGN  shift, and go to state 79
    SUB_ASSIGN  shift, and go to state 80
    MUL_ASSIGN  shift, and go to state 81
    QUO_ASSIGN  shift, and go to state 82
    REM_ASSIGN  shift, and go to state 83
    '='         shift, and go to state 84

    $default  reduce using rule 39 (Assign)

    Assign  go to state 85


State 39

   32 or: OR .

    $default  reduce using rule 32 (or)


State 40

   29 Expr: AndExpr or . Expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 86
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 41

   48 Cmpr: BIG_EQU .

    $default  reduce using rule 48 (Cmpr)


State 42

   47 Cmpr: SMALL_EQU .

    $default  reduce using rule 47 (Cmpr)


State 43

   49 Cmpr: EQUAL .

    $default  reduce using rule 49 (Cmpr)


State 44

   50 Cmpr: NOT_EQUAL .

    $default  reduce using rule 50 (Cmpr)


State 45

   42 and: AND .

    $default  reduce using rule 42 (and)


State 46

   45 Cmpr: '<' .

    $default  reduce using rule 45 (Cmpr)


State 47

   46 Cmpr: '>' .

    $default  reduce using rule 46 (Cmpr)


State 48

   40 AndExpr: CmprExpr and . AndExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    AndExpr   go to state 87
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 49

   43 CmprExpr: CmprExpr Cmpr . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    AddExpr  go to state 88
    MulExpr  go to state 25
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 50

   53 Add: '+' .

    $default  reduce using rule 53 (Add)


State 51

   54 Add: '-' .

    $default  reduce using rule 54 (Add)


State 52

   51 AddExpr: MulExpr Add . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    AddExpr  go to state 89
    MulExpr  go to state 25
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 53

   57 Mul: '*' .

    $default  reduce using rule 57 (Mul)


State 54

   58 Mul: '/' .

    $default  reduce using rule 58 (Mul)


State 55

   59 Mul: '%' .

    $default  reduce using rule 59 (Mul)


State 56

   55 MulExpr: UnaExpr Mul . MulExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    MulExpr  go to state 90
    UnaExpr  go to state 26
    SignOpt  go to state 27
    Reverse  go to state 28


State 57

   76 OneArith: INC .

    $default  reduce using rule 76 (OneArith)


State 58

   77 OneArith: DEC .

    $default  reduce using rule 77 (OneArith)


State 59

   25 Literal: INT_LIT .

    $default  reduce using rule 25 (Literal)


State 60

   26 Literal: FLOAT_LIT .

    $default  reduce using rule 26 (Literal)


State 61

   75 EnterCast: '(' .
   84 BracHead: '(' .

    INT       reduce using rule 75 (EnterCast)
    FLOAT     reduce using rule 75 (EnterCast)
    BOOL      reduce using rule 75 (EnterCast)
    STRING    reduce using rule 75 (EnterCast)
    $default  reduce using rule 84 (BracHead)


State 62

   27 Literal: '"' . str '"'

    STRING_LIT  shift, and go to state 91

    str  go to state 92


State 63

   67 Atom: Ident .
   68     | Ident . OneArith
   72     | Ident . IndHead Expr IndEnd

    INC  shift, and go to state 57
    DEC  shift, and go to state 58
    '['  shift, and go to state 76

    $default  reduce using rule 67 (Atom)

    OneArith  go to state 93
    IndHead   go to state 94


State 64

   70 Atom: Literal .

    $default  reduce using rule 70 (Atom)


State 65

   60 UnaExpr: SignOpt Atom .

    $default  reduce using rule 60 (UnaExpr)


State 66

   73 Atom: EnterCast . TypeName ')' Ident
   74     | EnterCast . TypeName ')' Literal

    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    BOOL    shift, and go to state 7
    STRING  shift, and go to state 8

    TypeName  go to state 95


State 67

   69 Atom: OneArith . Ident

    IDENT  shift, and go to state 36

    Ident  go to state 96


State 68

   71 Atom: BracHead . Expr BracEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 97
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 69

   78 Boolean: TRUE .

    $default  reduce using rule 78 (Boolean)


State 70

   79 Boolean: FALSE .

    $default  reduce using rule 79 (Boolean)


State 71

   61 UnaExpr: Reverse Boolean .

    $default  reduce using rule 61 (UnaExpr)


State 72

   80 PrintStmt: PRINT '(' Expr . LeavePrint

    ')'  shift, and go to state 98

    LeavePrint  go to state 99


State 73

    4 StatementList: WHILE '(' Expr . LeaveExpr ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr . LeaveExpr ')' NewScope StatementList EndScope

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 100


State 74

    2 StatementList: Statement ';' StatementList .

    $default  reduce using rule 2 (StatementList)


State 75

   22 LitInit: '=' . Literal
   23        | '=' . Boolean

    TRUE       shift, and go to state 69
    FALSE      shift, and go to state 70
    INT_LIT    shift, and go to state 59
    FLOAT_LIT  shift, and go to state 60
    '"'        shift, and go to state 62

    Literal  go to state 101
    Boolean  go to state 102


State 76

   82 IndHead: '[' .

    $default  reduce using rule 82 (IndHead)


State 77

   14 DeclarationStmt: Type Ident LitInit .

    $default  reduce using rule 14 (DeclarationStmt)


State 78

   15 DeclarationStmt: Type Ident IndHead . Expr IndEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 103
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 79

   34 Assign: ADD_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 104
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 80

   35 Assign: SUB_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 105
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 81

   36 Assign: MUL_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 106
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 82

   37 Assign: QUO_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 107
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 83

   38 Assign: REM_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 108
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 84

   33 Assign: '=' . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 109
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 85

   10 Statement: Expr LeaveExpr Assign .

    $default  reduce using rule 10 (Statement)


State 86

   29 Expr: AndExpr or Expr .

    $default  reduce using rule 29 (Expr)


State 87

   40 AndExpr: CmprExpr and AndExpr .

    $default  reduce using rule 40 (AndExpr)


State 88

   43 CmprExpr: CmprExpr Cmpr AddExpr .

    $default  reduce using rule 43 (CmprExpr)


State 89

   51 AddExpr: MulExpr Add AddExpr .

    $default  reduce using rule 51 (AddExpr)


State 90

   55 MulExpr: UnaExpr Mul MulExpr .

    $default  reduce using rule 55 (MulExpr)


State 91

   28 str: STRING_LIT .

    $default  reduce using rule 28 (str)


State 92

   27 Literal: '"' str . '"'

    '"'  shift, and go to state 110


State 93

   68 Atom: Ident OneArith .

    $default  reduce using rule 68 (Atom)


State 94

   72 Atom: Ident IndHead . Expr IndEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    Expr      go to state 111
    AndExpr   go to state 22
    CmprExpr  go to state 23
    AddExpr   go to state 24
    MulExpr   go to state 25
    UnaExpr   go to state 26
    SignOpt   go to state 27
    Reverse   go to state 28


State 95

   73 Atom: EnterCast TypeName . ')' Ident
   74     | EnterCast TypeName . ')' Literal

    ')'  shift, and go to state 112


State 96

   69 Atom: OneArith Ident .

    $default  reduce using rule 69 (Atom)


State 97

   71 Atom: BracHead Expr . BracEnd

    ')'  shift, and go to state 113

    BracEnd  go to state 114


State 98

   81 LeavePrint: ')' .

    $default  reduce using rule 81 (LeavePrint)


State 99

   80 PrintStmt: PRINT '(' Expr LeavePrint .

    $default  reduce using rule 80 (PrintStmt)


State 100

    4 StatementList: WHILE '(' Expr LeaveExpr . ')' NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr . ')' NewScope StatementList EndScope

    ')'  shift, and go to state 115


State 101

   22 LitInit: '=' Literal .

    $default  reduce using rule 22 (LitInit)


State 102

   23 LitInit: '=' Boolean .

    $default  reduce using rule 23 (LitInit)


State 103

   15 DeclarationStmt: Type Ident IndHead Expr . IndEnd

    ']'  shift, and go to state 116

    IndEnd  go to state 117


State 104

   34 Assign: ADD_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 118


State 105

   35 Assign: SUB_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 119


State 106

   36 Assign: MUL_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 120


State 107

   37 Assign: QUO_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 121


State 108

   38 Assign: REM_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 122


State 109

   33 Assign: '=' Expr . LeaveExpr

    $default  reduce using rule 31 (LeaveExpr)

    LeaveExpr  go to state 123


State 110

   27 Literal: '"' str '"' .

    $default  reduce using rule 27 (Literal)


State 111

   72 Atom: Ident IndHead Expr . IndEnd

    ']'  shift, and go to state 116

    IndEnd  go to state 124


State 112

   73 Atom: EnterCast TypeName ')' . Ident
   74     | EnterCast TypeName ')' . Literal

    INT_LIT    shift, and go to state 59
    FLOAT_LIT  shift, and go to state 60
    IDENT      shift, and go to state 36
    '"'        shift, and go to state 62

    Ident    go to state 125
    Literal  go to state 126


State 113

   85 BracEnd: ')' .

    $default  reduce using rule 85 (BracEnd)


State 114

   71 Atom: BracHead Expr BracEnd .

    $default  reduce using rule 71 (Atom)


State 115

    4 StatementList: WHILE '(' Expr LeaveExpr ')' . NewScope StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' . NewScope StatementList EndScope

    '{'  shift, and go to state 1

    $default  reduce using rule 7 (NewScope)

    NewScope  go to state 127


State 116

   83 IndEnd: ']' .

    $default  reduce using rule 83 (IndEnd)


State 117

   15 DeclarationStmt: Type Ident IndHead Expr IndEnd .

    $default  reduce using rule 15 (DeclarationStmt)


State 118

   34 Assign: ADD_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 34 (Assign)


State 119

   35 Assign: SUB_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 35 (Assign)


State 120

   36 Assign: MUL_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 36 (Assign)


State 121

   37 Assign: QUO_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 37 (Assign)


State 122

   38 Assign: REM_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 38 (Assign)


State 123

   33 Assign: '=' Expr LeaveExpr .

    $default  reduce using rule 33 (Assign)


State 124

   72 Atom: Ident IndHead Expr IndEnd .

    $default  reduce using rule 72 (Atom)


State 125

   73 Atom: EnterCast TypeName ')' Ident .

    $default  reduce using rule 73 (Atom)


State 126

   74 Atom: EnterCast TypeName ')' Literal .

    $default  reduce using rule 74 (Atom)


State 127

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope . StatementList EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope . StatementList EndScope

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    $default  reduce using rule 64 (SignOpt)

    StatementList    go to state 128
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 128

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList . EndScope StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList . EndScope

    '}'  shift, and go to state 129

    EndScope  go to state 130


State 129

    8 EndScope: '}' .

    $default  reduce using rule 8 (EndScope)


State 130

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope . StatementList
    5              | WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope .

    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    BOOL      shift, and go to state 7
    STRING    shift, and go to state 8
    IfStmt    shift, and go to state 9
    LoopStmt  shift, and go to state 10
    PRINT     shift, and go to state 11
    WHILE     shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 5 (StatementList)
    TRUE      reduce using rule 66 (Reverse)
    FALSE     reduce using rule 66 (Reverse)
    '}'       reduce using rule 5 (StatementList)
    $default  reduce using rule 64 (SignOpt)

    StatementList    go to state 131
    Statement        go to state 17
    DeclarationStmt  go to state 18
    Type             go to state 19
    TypeName         go to state 20
    Expr             go to state 21
    AndExpr          go to state 22
    CmprExpr         go to state 23
    AddExpr          go to state 24
    MulExpr          go to state 25
    UnaExpr          go to state 26
    SignOpt          go to state 27
    Reverse          go to state 28
    PrintStmt        go to state 29


State 131

    4 StatementList: WHILE '(' Expr LeaveExpr ')' NewScope StatementList EndScope StatementList .

    $default  reduce using rule 4 (StatementList)
