Terminals unused in grammar

    SEMICOLON


Grammar

    0 $accept: Program $end

    1 Program: Start StatementList

    2 Start: %empty

    3 StatementList: Statement ';' StatementList
    4              | Statement ';'
    5              | WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope StatementList
    6              | WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope
    7              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope
    9              | IfStmt

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' NewScope StatementList EndScope ElseStmt
   13         | ELSE NewScope StatementList EndScope
   14         | %empty

   15 Cond: %empty

   16 NewScope: '{'

   17 EndScope: '}'

   18 Statement: DeclarationStmt
   19          | Expr LeaveExpr Assign
   20          | LoopStmt
   21          | PrintStmt

   22 DeclarationStmt: Type Ident LitInit
   23                | Type Ident IndHead Expr IndEnd

   24 Type: TypeName

   25 TypeName: INT
   26         | FLOAT
   27         | STRING
   28         | BOOL

   29 Ident: IDENT

   30 LitInit: '=' Literal
   31        | '=' Boolean
   32        | %empty

   33 Literal: INT_LIT
   34        | FLOAT_LIT
   35        | '"' str '"'

   36 str: STRING_LIT

   37 Expr: AndExpr or Expr
   38     | AndExpr

   39 LeaveExpr: %empty

   40 or: OR

   41 Assign: Eq Expr LeaveExpr
   42       | ADD_ASSIGN Expr LeaveExpr
   43       | SUB_ASSIGN Expr LeaveExpr
   44       | MUL_ASSIGN Expr LeaveExpr
   45       | QUO_ASSIGN Expr LeaveExpr
   46       | REM_ASSIGN Expr LeaveExpr
   47       | %empty

   48 Eq: '='

   49 AndExpr: CmprExpr and AndExpr
   50        | CmprExpr

   51 and: AND

   52 CmprExpr: CmprExpr Cmpr AddExpr
   53         | AddExpr

   54 Cmpr: '<'
   55     | '>'
   56     | SMALL_EQU
   57     | BIG_EQU
   58     | EQUAL
   59     | NOT_EQUAL

   60 AddExpr: MulExpr Add AddExpr
   61        | MulExpr

   62 Add: '+'
   63    | '-'

   64 MulExpr: UnaExpr Mul MulExpr
   65        | UnaExpr

   66 Mul: '*'
   67    | '/'
   68    | '%'

   69 UnaExpr: SignOpt Atom
   70        | Reverse Boolean

   71 SignOpt: '+' SignOpt
   72        | '-' SignOpt
   73        | %empty

   74 Reverse: '!' Reverse
   75        | %empty

   76 Atom: Ident
   77     | Ident OneArith
   78     | OneArith Ident
   79     | Literal
   80     | BracHead Expr BracEnd
   81     | Ident IndHead Expr IndEnd
   82     | EnterCast TypeName ')' Ident
   83     | EnterCast TypeName ')' Literal

   84 EnterCast: '('

   85 OneArith: INC
   86         | DEC

   87 Boolean: TRUE
   88        | FALSE

   89 PrintStmt: PRINT '(' Expr LeavePrint

   90 LeavePrint: ')'

   91 IndHead: '['

   92 IndEnd: ']'

   93 BracHead: '('

   94 BracEnd: ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 74
    '"' (34) 35
    '%' (37) 68
    '(' (40) 5 6 7 8 10 11 12 84 89 93
    ')' (41) 5 6 7 8 10 11 12 82 83 90 94
    '*' (42) 66
    '+' (43) 62 71
    '-' (45) 63 72
    '/' (47) 67
    ';' (59) 3 4 7 8
    '<' (60) 54
    '=' (61) 30 31 48
    '>' (62) 55
    '[' (91) 91
    ']' (93) 92
    '{' (123) 16
    '}' (125) 17
    error (256)
    INT (258) 25
    FLOAT (259) 26
    BOOL (260) 28
    STRING (261) 27
    SEMICOLON (262)
    LoopStmt (263) 20
    PRINT (264) 89
    INC (265) 85
    DEC (266) 86
    BIG_EQU (267) 57
    SMALL_EQU (268) 56
    EQUAL (269) 58
    NOT_EQUAL (270) 59
    AND (271) 51
    OR (272) 40
    TRUE (273) 87
    FALSE (274) 88
    IF (275) 10 11 12
    ELSE (276) 12 13
    WHILE (277) 5 6
    FOR (278) 7 8
    ADD_ASSIGN (279) 42
    SUB_ASSIGN (280) 43
    MUL_ASSIGN (281) 44
    QUO_ASSIGN (282) 45
    REM_ASSIGN (283) 46
    INT_LIT <i_val> (284) 33
    FLOAT_LIT <f_val> (285) 34
    STRING_LIT <s_val> (286) 36
    IDENT <s_val> (287) 29


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Program (51)
        on left: 1
        on right: 0
    Start (52)
        on left: 2
        on right: 1
    StatementList (53)
        on left: 3 4 5 6 7 8 9
        on right: 1 3 5 6 7 8 10 11 12 13
    IfStmt (54)
        on left: 10 11
        on right: 9
    ElseStmt (55)
        on left: 12 13 14
        on right: 10 11 12
    Cond (56)
        on left: 15
        on right: 5 6 7 8 10 11
    NewScope (57)
        on left: 16
        on right: 5 6 7 8 10 11 12 13
    EndScope (58)
        on left: 17
        on right: 5 6 7 8 10 11 12 13
    Statement (59)
        on left: 18 19 20 21
        on right: 3 4
    DeclarationStmt (60)
        on left: 22 23
        on right: 18
    Type (61)
        on left: 24
        on right: 22 23
    TypeName (62)
        on left: 25 26 27 28
        on right: 24 82 83
    Ident (63)
        on left: 29
        on right: 22 23 76 77 78 81 82
    LitInit (64)
        on left: 30 31 32
        on right: 22
    Literal (65)
        on left: 33 34 35
        on right: 30 79 83
    str (66)
        on left: 36
        on right: 35
    Expr (67)
        on left: 37 38
        on right: 5 6 7 8 10 11 12 19 23 37 41 42 43 44 45 46 80 81 89
    LeaveExpr (68)
        on left: 39
        on right: 5 6 7 8 10 11 12 19 41 42 43 44 45 46
    or (69)
        on left: 40
        on right: 37
    Assign (70)
        on left: 41 42 43 44 45 46 47
        on right: 7 8 19
    Eq (71)
        on left: 48
        on right: 41
    AndExpr (72)
        on left: 49 50
        on right: 37 38 49
    and (73)
        on left: 51
        on right: 49
    CmprExpr (74)
        on left: 52 53
        on right: 49 50 52
    Cmpr (75)
        on left: 54 55 56 57 58 59
        on right: 52
    AddExpr (76)
        on left: 60 61
        on right: 52 53 60
    Add (77)
        on left: 62 63
        on right: 60
    MulExpr (78)
        on left: 64 65
        on right: 60 61 64
    Mul (79)
        on left: 66 67 68
        on right: 64
    UnaExpr (80)
        on left: 69 70
        on right: 64 65
    SignOpt (81)
        on left: 71 72 73
        on right: 69 71 72
    Reverse (82)
        on left: 74 75
        on right: 70 74
    Atom (83)
        on left: 76 77 78 79 80 81 82 83
        on right: 69
    EnterCast (84)
        on left: 84
        on right: 82 83
    OneArith (85)
        on left: 85 86
        on right: 77 78
    Boolean (86)
        on left: 87 88
        on right: 31 70
    PrintStmt (87)
        on left: 89
        on right: 21
    LeavePrint (88)
        on left: 90
        on right: 89
    IndHead (89)
        on left: 91
        on right: 23 81
    IndEnd (90)
        on left: 92
        on right: 23 81
    BracHead (91)
        on left: 93
        on right: 80
    BracEnd (92)
        on left: 94
        on right: 80


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (Start)

    Program  go to state 1
    Start    go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: Start . StatementList

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 16
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 3

    0 $accept: Program $end .

    $default  accept


State 4

   25 TypeName: INT .

    $default  reduce using rule 25 (TypeName)


State 5

   26 TypeName: FLOAT .

    $default  reduce using rule 26 (TypeName)


State 6

   28 TypeName: BOOL .

    $default  reduce using rule 28 (TypeName)


State 7

   27 TypeName: STRING .

    $default  reduce using rule 27 (TypeName)


State 8

   20 Statement: LoopStmt .

    $default  reduce using rule 20 (Statement)


State 9

   89 PrintStmt: PRINT . '(' Expr LeavePrint

    '('  shift, and go to state 31


State 10

   10 IfStmt: IF . '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF . '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    '('  shift, and go to state 32


State 11

    5 StatementList: WHILE . '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope StatementList
    6              | WHILE . '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope

    '('  shift, and go to state 33


State 12

    7 StatementList: FOR . '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR . '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    '('  shift, and go to state 34


State 13

   71 SignOpt: '+' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 73 (SignOpt)

    SignOpt  go to state 35


State 14

   72 SignOpt: '-' . SignOpt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14

    $default  reduce using rule 73 (SignOpt)

    SignOpt  go to state 36


State 15

   74 Reverse: '!' . Reverse

    '!'  shift, and go to state 15

    $default  reduce using rule 75 (Reverse)

    Reverse  go to state 37


State 16

    1 Program: Start StatementList .

    $default  reduce using rule 1 (Program)


State 17

    9 StatementList: IfStmt .

    $default  reduce using rule 9 (StatementList)


State 18

    3 StatementList: Statement . ';' StatementList
    4              | Statement . ';'

    ';'  shift, and go to state 38


State 19

   18 Statement: DeclarationStmt .

    $default  reduce using rule 18 (Statement)


State 20

   22 DeclarationStmt: Type . Ident LitInit
   23                | Type . Ident IndHead Expr IndEnd

    IDENT  shift, and go to state 39

    Ident  go to state 40


State 21

   24 Type: TypeName .

    $default  reduce using rule 24 (Type)


State 22

   19 Statement: Expr . LeaveExpr Assign

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 41


State 23

   37 Expr: AndExpr . or Expr
   38     | AndExpr .

    OR  shift, and go to state 42

    $default  reduce using rule 38 (Expr)

    or  go to state 43


State 24

   49 AndExpr: CmprExpr . and AndExpr
   50        | CmprExpr .
   52 CmprExpr: CmprExpr . Cmpr AddExpr

    BIG_EQU    shift, and go to state 44
    SMALL_EQU  shift, and go to state 45
    EQUAL      shift, and go to state 46
    NOT_EQUAL  shift, and go to state 47
    AND        shift, and go to state 48
    '<'        shift, and go to state 49
    '>'        shift, and go to state 50

    $default  reduce using rule 50 (AndExpr)

    and   go to state 51
    Cmpr  go to state 52


State 25

   53 CmprExpr: AddExpr .

    $default  reduce using rule 53 (CmprExpr)


State 26

   60 AddExpr: MulExpr . Add AddExpr
   61        | MulExpr .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54

    $default  reduce using rule 61 (AddExpr)

    Add  go to state 55


State 27

   64 MulExpr: UnaExpr . Mul MulExpr
   65        | UnaExpr .

    '*'  shift, and go to state 56
    '/'  shift, and go to state 57
    '%'  shift, and go to state 58

    $default  reduce using rule 65 (MulExpr)

    Mul  go to state 59


State 28

   69 UnaExpr: SignOpt . Atom

    INC        shift, and go to state 60
    DEC        shift, and go to state 61
    INT_LIT    shift, and go to state 62
    FLOAT_LIT  shift, and go to state 63
    IDENT      shift, and go to state 39
    '('        shift, and go to state 64
    '"'        shift, and go to state 65

    Ident      go to state 66
    Literal    go to state 67
    Atom       go to state 68
    EnterCast  go to state 69
    OneArith   go to state 70
    BracHead   go to state 71


State 29

   70 UnaExpr: Reverse . Boolean

    TRUE   shift, and go to state 72
    FALSE  shift, and go to state 73

    Boolean  go to state 74


State 30

   21 Statement: PrintStmt .

    $default  reduce using rule 21 (Statement)


State 31

   89 PrintStmt: PRINT '(' . Expr LeavePrint

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 75
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 32

   10 IfStmt: IF '(' . Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' . Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 76
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 33

    5 StatementList: WHILE '(' . Expr Cond LeaveExpr ')' NewScope StatementList EndScope StatementList
    6              | WHILE '(' . Expr Cond LeaveExpr ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 77
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 34

    7 StatementList: FOR '(' . Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' . Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 78
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 35

   71 SignOpt: '+' SignOpt .

    $default  reduce using rule 71 (SignOpt)


State 36

   72 SignOpt: '-' SignOpt .

    $default  reduce using rule 72 (SignOpt)


State 37

   74 Reverse: '!' Reverse .

    $default  reduce using rule 74 (Reverse)


State 38

    3 StatementList: Statement ';' . StatementList
    4              | Statement ';' .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 4 (StatementList)
    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    '}'       reduce using rule 4 (StatementList)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 79
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 39

   29 Ident: IDENT .

    $default  reduce using rule 29 (Ident)


State 40

   22 DeclarationStmt: Type Ident . LitInit
   23                | Type Ident . IndHead Expr IndEnd

    '='  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 32 (LitInit)

    LitInit  go to state 82
    IndHead  go to state 83


State 41

   19 Statement: Expr LeaveExpr . Assign

    ADD_ASSIGN  shift, and go to state 84
    SUB_ASSIGN  shift, and go to state 85
    MUL_ASSIGN  shift, and go to state 86
    QUO_ASSIGN  shift, and go to state 87
    REM_ASSIGN  shift, and go to state 88
    '='         shift, and go to state 89

    $default  reduce using rule 47 (Assign)

    Assign  go to state 90
    Eq      go to state 91


State 42

   40 or: OR .

    $default  reduce using rule 40 (or)


State 43

   37 Expr: AndExpr or . Expr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 92
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 44

   57 Cmpr: BIG_EQU .

    $default  reduce using rule 57 (Cmpr)


State 45

   56 Cmpr: SMALL_EQU .

    $default  reduce using rule 56 (Cmpr)


State 46

   58 Cmpr: EQUAL .

    $default  reduce using rule 58 (Cmpr)


State 47

   59 Cmpr: NOT_EQUAL .

    $default  reduce using rule 59 (Cmpr)


State 48

   51 and: AND .

    $default  reduce using rule 51 (and)


State 49

   54 Cmpr: '<' .

    $default  reduce using rule 54 (Cmpr)


State 50

   55 Cmpr: '>' .

    $default  reduce using rule 55 (Cmpr)


State 51

   49 AndExpr: CmprExpr and . AndExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    AndExpr   go to state 93
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 52

   52 CmprExpr: CmprExpr Cmpr . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    AddExpr  go to state 94
    MulExpr  go to state 26
    UnaExpr  go to state 27
    SignOpt  go to state 28
    Reverse  go to state 29


State 53

   62 Add: '+' .

    $default  reduce using rule 62 (Add)


State 54

   63 Add: '-' .

    $default  reduce using rule 63 (Add)


State 55

   60 AddExpr: MulExpr Add . AddExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    AddExpr  go to state 95
    MulExpr  go to state 26
    UnaExpr  go to state 27
    SignOpt  go to state 28
    Reverse  go to state 29


State 56

   66 Mul: '*' .

    $default  reduce using rule 66 (Mul)


State 57

   67 Mul: '/' .

    $default  reduce using rule 67 (Mul)


State 58

   68 Mul: '%' .

    $default  reduce using rule 68 (Mul)


State 59

   64 MulExpr: UnaExpr Mul . MulExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    MulExpr  go to state 96
    UnaExpr  go to state 27
    SignOpt  go to state 28
    Reverse  go to state 29


State 60

   85 OneArith: INC .

    $default  reduce using rule 85 (OneArith)


State 61

   86 OneArith: DEC .

    $default  reduce using rule 86 (OneArith)


State 62

   33 Literal: INT_LIT .

    $default  reduce using rule 33 (Literal)


State 63

   34 Literal: FLOAT_LIT .

    $default  reduce using rule 34 (Literal)


State 64

   84 EnterCast: '(' .
   93 BracHead: '(' .

    INT       reduce using rule 84 (EnterCast)
    FLOAT     reduce using rule 84 (EnterCast)
    BOOL      reduce using rule 84 (EnterCast)
    STRING    reduce using rule 84 (EnterCast)
    $default  reduce using rule 93 (BracHead)


State 65

   35 Literal: '"' . str '"'

    STRING_LIT  shift, and go to state 97

    str  go to state 98


State 66

   76 Atom: Ident .
   77     | Ident . OneArith
   81     | Ident . IndHead Expr IndEnd

    INC  shift, and go to state 60
    DEC  shift, and go to state 61
    '['  shift, and go to state 81

    $default  reduce using rule 76 (Atom)

    OneArith  go to state 99
    IndHead   go to state 100


State 67

   79 Atom: Literal .

    $default  reduce using rule 79 (Atom)


State 68

   69 UnaExpr: SignOpt Atom .

    $default  reduce using rule 69 (UnaExpr)


State 69

   82 Atom: EnterCast . TypeName ')' Ident
   83     | EnterCast . TypeName ')' Literal

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    BOOL    shift, and go to state 6
    STRING  shift, and go to state 7

    TypeName  go to state 101


State 70

   78 Atom: OneArith . Ident

    IDENT  shift, and go to state 39

    Ident  go to state 102


State 71

   80 Atom: BracHead . Expr BracEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 103
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 72

   87 Boolean: TRUE .

    $default  reduce using rule 87 (Boolean)


State 73

   88 Boolean: FALSE .

    $default  reduce using rule 88 (Boolean)


State 74

   70 UnaExpr: Reverse Boolean .

    $default  reduce using rule 70 (UnaExpr)


State 75

   89 PrintStmt: PRINT '(' Expr . LeavePrint

    ')'  shift, and go to state 104

    LeavePrint  go to state 105


State 76

   10 IfStmt: IF '(' Expr . Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr . Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    $default  reduce using rule 15 (Cond)

    Cond  go to state 106


State 77

    5 StatementList: WHILE '(' Expr . Cond LeaveExpr ')' NewScope StatementList EndScope StatementList
    6              | WHILE '(' Expr . Cond LeaveExpr ')' NewScope StatementList EndScope

    $default  reduce using rule 15 (Cond)

    Cond  go to state 107


State 78

    7 StatementList: FOR '(' Expr . LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr . LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 108


State 79

    3 StatementList: Statement ';' StatementList .

    $default  reduce using rule 3 (StatementList)


State 80

   30 LitInit: '=' . Literal
   31        | '=' . Boolean

    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    INT_LIT    shift, and go to state 62
    FLOAT_LIT  shift, and go to state 63
    '"'        shift, and go to state 65

    Literal  go to state 109
    Boolean  go to state 110


State 81

   91 IndHead: '[' .

    $default  reduce using rule 91 (IndHead)


State 82

   22 DeclarationStmt: Type Ident LitInit .

    $default  reduce using rule 22 (DeclarationStmt)


State 83

   23 DeclarationStmt: Type Ident IndHead . Expr IndEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 111
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 84

   42 Assign: ADD_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 112
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 85

   43 Assign: SUB_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 113
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 86

   44 Assign: MUL_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 114
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 87

   45 Assign: QUO_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 115
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 88

   46 Assign: REM_ASSIGN . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 116
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 89

   48 Eq: '=' .

    $default  reduce using rule 48 (Eq)


State 90

   19 Statement: Expr LeaveExpr Assign .

    $default  reduce using rule 19 (Statement)


State 91

   41 Assign: Eq . Expr LeaveExpr

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 117
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 92

   37 Expr: AndExpr or Expr .

    $default  reduce using rule 37 (Expr)


State 93

   49 AndExpr: CmprExpr and AndExpr .

    $default  reduce using rule 49 (AndExpr)


State 94

   52 CmprExpr: CmprExpr Cmpr AddExpr .

    $default  reduce using rule 52 (CmprExpr)


State 95

   60 AddExpr: MulExpr Add AddExpr .

    $default  reduce using rule 60 (AddExpr)


State 96

   64 MulExpr: UnaExpr Mul MulExpr .

    $default  reduce using rule 64 (MulExpr)


State 97

   36 str: STRING_LIT .

    $default  reduce using rule 36 (str)


State 98

   35 Literal: '"' str . '"'

    '"'  shift, and go to state 118


State 99

   77 Atom: Ident OneArith .

    $default  reduce using rule 77 (Atom)


State 100

   81 Atom: Ident IndHead . Expr IndEnd

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 119
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 101

   82 Atom: EnterCast TypeName . ')' Ident
   83     | EnterCast TypeName . ')' Literal

    ')'  shift, and go to state 120


State 102

   78 Atom: OneArith Ident .

    $default  reduce using rule 78 (Atom)


State 103

   80 Atom: BracHead Expr . BracEnd

    ')'  shift, and go to state 121

    BracEnd  go to state 122


State 104

   90 LeavePrint: ')' .

    $default  reduce using rule 90 (LeavePrint)


State 105

   89 PrintStmt: PRINT '(' Expr LeavePrint .

    $default  reduce using rule 89 (PrintStmt)


State 106

   10 IfStmt: IF '(' Expr Cond . LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond . LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 123


State 107

    5 StatementList: WHILE '(' Expr Cond . LeaveExpr ')' NewScope StatementList EndScope StatementList
    6              | WHILE '(' Expr Cond . LeaveExpr ')' NewScope StatementList EndScope

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 124


State 108

    7 StatementList: FOR '(' Expr LeaveExpr . Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr . Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    ADD_ASSIGN  shift, and go to state 84
    SUB_ASSIGN  shift, and go to state 85
    MUL_ASSIGN  shift, and go to state 86
    QUO_ASSIGN  shift, and go to state 87
    REM_ASSIGN  shift, and go to state 88
    '='         shift, and go to state 89

    $default  reduce using rule 47 (Assign)

    Assign  go to state 125
    Eq      go to state 91


State 109

   30 LitInit: '=' Literal .

    $default  reduce using rule 30 (LitInit)


State 110

   31 LitInit: '=' Boolean .

    $default  reduce using rule 31 (LitInit)


State 111

   23 DeclarationStmt: Type Ident IndHead Expr . IndEnd

    ']'  shift, and go to state 126

    IndEnd  go to state 127


State 112

   42 Assign: ADD_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 128


State 113

   43 Assign: SUB_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 129


State 114

   44 Assign: MUL_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 130


State 115

   45 Assign: QUO_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 131


State 116

   46 Assign: REM_ASSIGN Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 132


State 117

   41 Assign: Eq Expr . LeaveExpr

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 133


State 118

   35 Literal: '"' str '"' .

    $default  reduce using rule 35 (Literal)


State 119

   81 Atom: Ident IndHead Expr . IndEnd

    ']'  shift, and go to state 126

    IndEnd  go to state 134


State 120

   82 Atom: EnterCast TypeName ')' . Ident
   83     | EnterCast TypeName ')' . Literal

    INT_LIT    shift, and go to state 62
    FLOAT_LIT  shift, and go to state 63
    IDENT      shift, and go to state 39
    '"'        shift, and go to state 65

    Ident    go to state 135
    Literal  go to state 136


State 121

   94 BracEnd: ')' .

    $default  reduce using rule 94 (BracEnd)


State 122

   80 Atom: BracHead Expr BracEnd .

    $default  reduce using rule 80 (Atom)


State 123

   10 IfStmt: IF '(' Expr Cond LeaveExpr . ')' NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr . ')' NewScope StatementList EndScope ElseStmt

    ')'  shift, and go to state 137


State 124

    5 StatementList: WHILE '(' Expr Cond LeaveExpr . ')' NewScope StatementList EndScope StatementList
    6              | WHILE '(' Expr Cond LeaveExpr . ')' NewScope StatementList EndScope

    ')'  shift, and go to state 138


State 125

    7 StatementList: FOR '(' Expr LeaveExpr Assign . ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign . ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    ';'  shift, and go to state 139


State 126

   92 IndEnd: ']' .

    $default  reduce using rule 92 (IndEnd)


State 127

   23 DeclarationStmt: Type Ident IndHead Expr IndEnd .

    $default  reduce using rule 23 (DeclarationStmt)


State 128

   42 Assign: ADD_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 42 (Assign)


State 129

   43 Assign: SUB_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 43 (Assign)


State 130

   44 Assign: MUL_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 44 (Assign)


State 131

   45 Assign: QUO_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 45 (Assign)


State 132

   46 Assign: REM_ASSIGN Expr LeaveExpr .

    $default  reduce using rule 46 (Assign)


State 133

   41 Assign: Eq Expr LeaveExpr .

    $default  reduce using rule 41 (Assign)


State 134

   81 Atom: Ident IndHead Expr IndEnd .

    $default  reduce using rule 81 (Atom)


State 135

   82 Atom: EnterCast TypeName ')' Ident .

    $default  reduce using rule 82 (Atom)


State 136

   83 Atom: EnterCast TypeName ')' Literal .

    $default  reduce using rule 83 (Atom)


State 137

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' . NewScope StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' . NewScope StatementList EndScope ElseStmt

    '{'  shift, and go to state 140

    NewScope  go to state 141


State 138

    5 StatementList: WHILE '(' Expr Cond LeaveExpr ')' . NewScope StatementList EndScope StatementList
    6              | WHILE '(' Expr Cond LeaveExpr ')' . NewScope StatementList EndScope

    '{'  shift, and go to state 140

    NewScope  go to state 142


State 139

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' . Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' . Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 143
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 140

   16 NewScope: '{' .

    $default  reduce using rule 16 (NewScope)


State 141

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope . StatementList EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' NewScope . StatementList EndScope ElseStmt

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 144
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 142

    5 StatementList: WHILE '(' Expr Cond LeaveExpr ')' NewScope . StatementList EndScope StatementList
    6              | WHILE '(' Expr Cond LeaveExpr ')' NewScope . StatementList EndScope

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 145
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 143

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr . Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr . Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    $default  reduce using rule 15 (Cond)

    Cond  go to state 146


State 144

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope StatementList . EndScope ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' NewScope StatementList . EndScope ElseStmt

    '}'  shift, and go to state 147

    EndScope  go to state 148


State 145

    5 StatementList: WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList . EndScope StatementList
    6              | WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList . EndScope

    '}'  shift, and go to state 147

    EndScope  go to state 149


State 146

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond . LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond . LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 150


State 147

   17 EndScope: '}' .

    $default  reduce using rule 17 (EndScope)


State 148

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope . ElseStmt StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope . ElseStmt

    ELSE  shift, and go to state 151

    $default  reduce using rule 14 (ElseStmt)

    ElseStmt  go to state 152


State 149

    5 StatementList: WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope . StatementList
    6              | WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 6 (StatementList)
    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    '}'       reduce using rule 6 (StatementList)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 153
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 150

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr . ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr . ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    ';'  shift, and go to state 154


State 151

   12 ElseStmt: ELSE . IF '(' Expr LeaveExpr ')' NewScope StatementList EndScope ElseStmt
   13         | ELSE . NewScope StatementList EndScope

    IF   shift, and go to state 155
    '{'  shift, and go to state 140

    NewScope  go to state 156


State 152

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt . StatementList
   11       | IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 11 (IfStmt)
    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    '}'       reduce using rule 11 (IfStmt)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 157
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 153

    5 StatementList: WHILE '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope StatementList .

    $default  reduce using rule 5 (StatementList)


State 154

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' . Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' . Expr LeaveExpr Assign ')' NewScope StatementList EndScope

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 158
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 155

   12 ElseStmt: ELSE IF . '(' Expr LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    '('  shift, and go to state 159


State 156

   13 ElseStmt: ELSE NewScope . StatementList EndScope

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 160
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 157

   10 IfStmt: IF '(' Expr Cond LeaveExpr ')' NewScope StatementList EndScope ElseStmt StatementList .

    $default  reduce using rule 10 (IfStmt)


State 158

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr . LeaveExpr Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr . LeaveExpr Assign ')' NewScope StatementList EndScope

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 161


State 159

   12 ElseStmt: ELSE IF '(' . Expr LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '!'  shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    Expr      go to state 162
    AndExpr   go to state 23
    CmprExpr  go to state 24
    AddExpr   go to state 25
    MulExpr   go to state 26
    UnaExpr   go to state 27
    SignOpt   go to state 28
    Reverse   go to state 29


State 160

   13 ElseStmt: ELSE NewScope StatementList . EndScope

    '}'  shift, and go to state 147

    EndScope  go to state 163


State 161

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr . Assign ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr . Assign ')' NewScope StatementList EndScope

    ADD_ASSIGN  shift, and go to state 84
    SUB_ASSIGN  shift, and go to state 85
    MUL_ASSIGN  shift, and go to state 86
    QUO_ASSIGN  shift, and go to state 87
    REM_ASSIGN  shift, and go to state 88
    '='         shift, and go to state 89

    $default  reduce using rule 47 (Assign)

    Assign  go to state 164
    Eq      go to state 91


State 162

   12 ElseStmt: ELSE IF '(' Expr . LeaveExpr ')' NewScope StatementList EndScope ElseStmt

    $default  reduce using rule 39 (LeaveExpr)

    LeaveExpr  go to state 165


State 163

   13 ElseStmt: ELSE NewScope StatementList EndScope .

    $default  reduce using rule 13 (ElseStmt)


State 164

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign . ')' NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign . ')' NewScope StatementList EndScope

    ')'  shift, and go to state 166


State 165

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr . ')' NewScope StatementList EndScope ElseStmt

    ')'  shift, and go to state 167


State 166

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' . NewScope StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' . NewScope StatementList EndScope

    '{'  shift, and go to state 140

    NewScope  go to state 168


State 167

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' . NewScope StatementList EndScope ElseStmt

    '{'  shift, and go to state 140

    NewScope  go to state 169


State 168

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope . StatementList EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope . StatementList EndScope

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 170
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 169

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' NewScope . StatementList EndScope ElseStmt

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 171
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 170

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList . EndScope StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList . EndScope

    '}'  shift, and go to state 147

    EndScope  go to state 172


State 171

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' NewScope StatementList . EndScope ElseStmt

    '}'  shift, and go to state 147

    EndScope  go to state 173


State 172

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope . StatementList
    8              | FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope .

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    BOOL      shift, and go to state 6
    STRING    shift, and go to state 7
    LoopStmt  shift, and go to state 8
    PRINT     shift, and go to state 9
    IF        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '!'       shift, and go to state 15

    $end      reduce using rule 8 (StatementList)
    TRUE      reduce using rule 75 (Reverse)
    FALSE     reduce using rule 75 (Reverse)
    '}'       reduce using rule 8 (StatementList)
    $default  reduce using rule 73 (SignOpt)

    StatementList    go to state 174
    IfStmt           go to state 17
    Statement        go to state 18
    DeclarationStmt  go to state 19
    Type             go to state 20
    TypeName         go to state 21
    Expr             go to state 22
    AndExpr          go to state 23
    CmprExpr         go to state 24
    AddExpr          go to state 25
    MulExpr          go to state 26
    UnaExpr          go to state 27
    SignOpt          go to state 28
    Reverse          go to state 29
    PrintStmt        go to state 30


State 173

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' NewScope StatementList EndScope . ElseStmt

    ELSE  shift, and go to state 151

    $default  reduce using rule 14 (ElseStmt)

    ElseStmt  go to state 175


State 174

    7 StatementList: FOR '(' Expr LeaveExpr Assign ';' Expr Cond LeaveExpr ';' Expr LeaveExpr Assign ')' NewScope StatementList EndScope StatementList .

    $default  reduce using rule 7 (StatementList)


State 175

   12 ElseStmt: ELSE IF '(' Expr LeaveExpr ')' NewScope StatementList EndScope ElseStmt .

    $default  reduce using rule 12 (ElseStmt)
